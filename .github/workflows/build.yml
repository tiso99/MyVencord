name: Build DevBuild
on:
    push:
        branches:
            - main
        paths:
            - .github/workflows/build.yml
            - src/**
            - browser/**
            - scripts/build/**
            - package.json
            - pnpm-lock.yaml

permissions:
    contents: write

env:
    FORCE_COLOR: true

jobs:
    Build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build web
              run: pnpm buildWebStandalone

            - name: Build
              run: pnpm build --standalone

            - name: Generate plugin list
              run: pnpm generatePluginJson dist/plugins.json dist/plugin-readmes.json

            - name: Clean up obsolete files
              run: |
                  rm -rf dist/*-unpacked dist/vendor Vencord.user.css vencordDesktopRenderer.css vencordDesktopRenderer.css.map

            - name: Set release tag
              run: echo "RELEASE_TAG=devbuild" >> $GITHUB_ENV

            - name: Create devbuild release if it doesn't exist
              if: github.repository == 'tiso99/MyVencord'
              run: |
                  if ! gh release view "$RELEASE_TAG"; then
                    gh release create "$RELEASE_TAG" --title "DevBuild" --notes "Auto-created dev build"
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  RELEASE_TAG: ${{ env.RELEASE_TAG }}

            - name: Upload DevBuild as release
              if: github.repository == 'tiso99/MyVencord'
              run: |
                  gh release upload "$RELEASE_TAG" --clobber dist/*
                  gh release edit "$RELEASE_TAG" --title "DevBuild $RELEASE_TAG"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  RELEASE_TAG: ${{ env.RELEASE_TAG }}

            - name: Upload DevBuild to builds repo
              if: github.repository == 'tiso99/MyVencord'
              run: |
                  git config --global user.name "$USERNAME"
                  git config --global user.email actions@github.com

                  git clone https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git upload
                  cd upload

                  GLOBIGNORE=.git:.gitignore:README.md:LICENSE
                  rm -rf *
                  cp -r ../dist/* .

                  git add -A
                  git commit -m "Builds for https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
                  git push --force https://$USERNAME:$API_TOKEN@github.com/$GH_REPO.git
              env:
                  API_TOKEN: ${{ secrets.BUILDS_TOKEN }}
                  GH_REPO: tiso99/builds
                  USERNAME: GitHub-Actions
